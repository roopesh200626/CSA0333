#include <stdio.h>
#define INF 999
#define V 4

int graph[V][V] = {
    {0, 1, 4, INF},
    {1, 0, 2, 6},
    {4, 2, 0, 3},
    {INF, 6, 3, 0}
};

void dijkstra(int start) {
    int dist[V], visited[V];
    for(int i = 0; i < V; i++) {
        dist[i] = INF;
        visited[i] = 0;
    }
    dist[start] = 0;

    for(int count = 0; count < V - 1; count++) {
        int min = INF, u;
        for(int i = 0; i < V; i++)
            if(!visited[i] && dist[i] <= min)
                min = dist[i], u = i;

        visited[u] = 1;

        for(int v = 0; v < V; v++)
            if(!visited[v] && graph[u][v] && dist[u] + graph[u][v] < dist[v])
                dist[v] = dist[u] + graph[u][v];
    }

    for(int i = 0; i < V; i++)
        printf("Distance from %d to %d = %d\n", start, i, dist[i]);
}

void main() {
    dijkstra(0);
}
